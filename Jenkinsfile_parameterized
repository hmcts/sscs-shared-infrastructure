#!groovy
import groovy.json.JsonSlurper

@Library('Infrastructure') _

properties([
    parameters([
        string(name: 'PRODUCT_NAME', defaultValue: 'sscs', description: ''),
        string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Suffix for resources created'),
        choice(name: 'SUBSCRIPTION', choices: 'nonprod\nprod\nsandbox', description: 'Azure subscriptions available to build in', defaultValue: 'sandbox'),
        booleanParam(name: 'PLAN_ONLY', defaultValue: true, description: 'set to true for skipping terraform apply')
    ]),
   [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '7', numToKeepStr: '10']]
])


productName = params.PRODUCT_NAME
subscription = params.SUBSCRIPTION
environment = params.ENVIRONMENT
planOnly = params.PLAN_ONLY


echo "Building '${productName}' in '${environment}'"

node {
  env.PATH = "$env.PATH:/usr/local/bin"
  def az = { cmd -> return sh(script: "env AZURE_CONFIG_DIR=/opt/jenkins/.azure-$subscription az $cmd", returnStdout: true).trim() }

  subscription_id = az "account show --query [id] -o tsv"
  env.TF_VARS_vault_uri = "https://infra-vault-${environment}.vault.azure.net/"
  env.TF_VARS_buildlog_sa_name = "mgmtbuildlogstore${environment}"
  env.TF_VARS_buildlog_sa_key = az "storage account keys list --subscription ${subscription_id} --account-name ${env.TF_VARS_buildlog_sa_name} --resource-group mgmt-buildlog-store-${environment} --output json | jq -r '.[1].value'"
  sharedInfrastructurePipeline('sscs', params.ENVIRONMENT, 'sandbox')
}
